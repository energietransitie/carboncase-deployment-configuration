version: "3.9"
services:

  app-tst:
    container_name: carboncase-app-tst
    image: <your image name>:latest
    restart: unless-stopped
    labels:
      - traefik.http.routers.carboncase-app-tst.rule=Host(`app.carboncase.tst.energietransitiewindesheim.nl`)
      - traefik.http.routers.carboncase-app-tst.tls=true
      - traefik.http.routers.carboncase-app-tst.tls.certresolver=lets-encrypt
      - traefik.http.services.carboncase-app-tst.loadbalancer.server.port=80
      - com.centurylinklabs.watchtower.enable=true
      - com.centurylinklabs.watchtower.scope=carboncase-tst
    # environment:
    #   - KEY=val
    networks:
      - web

  app-api-tst:
    container_name: carboncase-app-api-tst
    image: <your image name>:latest
    restart: unless-stopped
    labels:
      - traefik.http.routers.carboncase-app-api-tst.rule=Host(`api.app.carboncase.tst.energietransitiewindesheim.nl`)
      - traefik.http.routers.carboncase-app-api-tst.tls=true
      - traefik.http.routers.carboncase-app-api-tst.tls.certresolver=lets-encrypt
      - traefik.http.services.carboncase-app-api-tst.loadbalancer.server.port=5000
      - com.centurylinklabs.watchtower.enable=true
      - com.centurylinklabs.watchtower.scope=carboncase-tst
    # environment:
    #   - KEY=val
    networks:
      - web

  management-tst:
    container_name: carboncase-management-tst
    image: <your image name>:latest
    restart: unless-stopped
    labels:
      - traefik.http.routers.carboncase-management-tst.rule=Host(`dash.carboncase.tst.energietransitiewindesheim.nl`)
      - traefik.http.routers.carboncase-management-tst.tls=true
      - traefik.http.routers.carboncase-management-tst.tls.certresolver=lets-encrypt
      - traefik.http.services.carboncase-management-tst.loadbalancer.server.port=80
      - com.centurylinklabs.watchtower.enable=true
      - com.centurylinklabs.watchtower.scope=carboncase-tst
    # environment:
    #   - KEY=val
    networks:
      - web

  management-api-tst:
    container_name: carboncase-management-tst
    image: <your image name>:latest
    restart: unless-stopped
    labels:
      - traefik.http.routers.carboncase-management-api-tst.rule=Host(`api.dash.carboncase.tst.energietransitiewindesheim.nl`)
      - traefik.http.routers.carboncase-management-api-tst.tls=true
      - traefik.http.routers.carboncase-management-api-tst.tls.certresolver=lets-encrypt
      - traefik.http.services.carboncase-management-api-tst.loadbalancer.server.port=5002
      - com.centurylinklabs.watchtower.enable=true
      - com.centurylinklabs.watchtower.scope=carboncase-tst
    # environment:
    #   - KEY=val
    networks:
      - web
  
  watchtower:
    container_name: carboncase-watchtower
    image: containrrr/watchtower:1.5.1
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    labels:
      - traefik.http.routers.carboncase-watchtower.rule=Host(`deploy.carboncase.tst.energietransitiewindesheim.nl`)
      - traefik.http.routers.carboncase-watchtower.tls=true
      - traefik.http.routers.carboncase-watchtower.tls.certresolver=lets-encrypt
      - traefik.http.services.carboncase-watchtower.loadbalancer.server.port=8080
      - com.centurylinklabs.watchtower.scope=carboncase-tst
    environment:
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_SCOPE=carboncase-tst
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_HTTP_API_UPDATE=true
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_HTTP_API_TOKEN}

networks:
  web:
    external: true